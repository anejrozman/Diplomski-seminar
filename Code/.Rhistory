set.seed(42)
# Definiraj funkcijo za sestavljen Poissonov proces
compound_poisson_process <- function(lambda, distribution_function, max_time) {
env <- simmer()
# Dodaj generator za prihode
env %>% add_generator("arrivals",
trajectory() %>% timeout(function() rexp(1, lambda)),
function() rpois(1, lambda))
# Dodaj generator za porazdelitev zneskov
env %>% add_generator("amounts",
trajectory() %>% set_attribute("amount", function() distribution_function()),
function() 1)  # En prihod za vsako vrednost v distribution_function
# Poveži generatorja
env %>% add_resource("server", capacity = Inf) %>%
seize_selected(resources = "server", rule = "smallest") %>%
timeout_from_attribute("amount") %>%
release_selected(resources = "server")
# Pojdi do konca simulacije
env %>% run(until = max_time)
# Vrni podatke o simulaciji
arrivals_data <- get_mon_arrivals(env)
amounts_data <- get_mon_attributes(env, "amount", filter = "amounts")
return(list(arrivals = arrivals_data, amounts = amounts_data))
}
# Nastavi parametre
lambda <- 5  # Intenziteta Poissonovega procesa
max_time <- 100  # Čas simulacije
# Definiraj porazdelitev za zneske (npr. eksponentna porazdelitev)
amount_distribution <- function() rexp(1, rate = 0.2)
# Simuliraj sestavljen Poissonov proces
sim_data <- compound_poisson_process(lambda, amount_distribution, max_time)
# Prikaži rezultate z uporabo ggplot2
ggplot(sim_data$arrivals, aes(x = time)) +
geom_point(aes(y = from_resource("arrivals")), color = "blue") +
geom_point(aes(y = from_resource("amounts")), color = "red") +
labs(title = "Sestavljen Poissonov proces",
x = "Čas",
y = "Število prihodov") +
theme_minimal()
# Simuliraj sestavljen Poissonov proces
sim_data <- compound_poisson_process(lambda, amount_distribution, max_time)
library(simmer)
library(ggplot2)
set.seed(42)
# Definiraj funkcijo za sestavljen Poissonov proces
compound_poisson_process <- function(lambda, distribution_function, max_time) {
env <- simmer()
# Dodaj generator za prihode
env %>% add_generator("arrivals",
trajectory() %>% timeout(function() rexp(1, lambda)),
function() rpois(1, lambda))
# Dodaj generator za porazdelitev zneskov
env %>% add_generator("amounts",
trajectory() %>% set_attribute("amount", function() distribution_function()),
function() 1)  # En prihod za vsako vrednost v distribution_function
# Poveži generatorja
env %>% add_resource("server", capacity = Inf) %>%
seize_selected(resources = "server", rule = "smallest") %>%
timeout_from_attribute("amount") %>%
release_selected(resources = "server")
# Pojdi do konca simulacije
env %>% run(until = max_time)
# Vrni podatke o simulaciji
arrivals_data <- get_mon_arrivals(env)
amounts_data <- get_mon_attributes(env, "amount", filter = "amounts")
return(list(arrivals = arrivals_data, amounts = amounts_data))
}
# Nastavi parametre
lambda <- 5  # Intenziteta Poissonovega procesa
max_time <- 100  # Čas simulacije
# Definiraj porazdelitev za zneske (npr. eksponentna porazdelitev)
amount_distribution <- function() {rexp(1, rate = 0.2)}
# Simuliraj sestavljen Poissonov proces
sim_data <- compound_poisson_process(lambda, amount_distribution, max_time)
# Prikaži rezultate z uporabo ggplot2
ggplot(sim_data$arrivals, aes(x = time)) +
geom_point(aes(y = from_resource("arrivals")), color = "blue") +
geom_point(aes(y = from_resource("amounts")), color = "red") +
labs(title = "Sestavljen Poissonov proces",
x = "Čas",
y = "Število prihodov") +
theme_minimal()
