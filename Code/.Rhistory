g7panjer
library(latex2exp)
# Plot
li = seq(0, 50, by = 0.1)
g7panjer = ggplot()
g7panjer = g7panjer +
geom_line(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_line(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
library(latex2exp)
# Plot
li = seq(0, 60, by = 0.1)
g7panjer = ggplot()
g7panjer = g7panjer +
geom_line(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_line(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
#Combine plots
g7approx = grid.arrange(g7upper, g7lower, ncol = 2)
g7 = grid.arrange(g7approx, g7panjer, heights = c(4, 6))
g7
# Save graph to pdf
ggsave(glue("{FILEPATH}slika7.pdf"),
g7,
device = cairo_pdf,
width = 12,
height = 10)
expLower1 = discretize(pexp(x, rate = a), 0, limX, by = 1, method = "lower")[2:]
expLower1 = discretize(pexp(x, rate = a), 0, limX, by = 1, method = "lower")[2:1000]
expLower1 = discretize(pexp(x, rate = a), 0, limX, by = 1, method = "lower")[2:1001]
expLower0.1 = discretize(pexp(x, rate = a), 0, limX, by = 0.1, method = "lower")[2:1001]
expLower1 = discretize(pexp(x, rate = a), 0, limX, by = 1, method = "lower")
expLower1 = discretize(pexp(x, rate = a), 0, limX, by = 1, method = "lower")[2:101]
expLower0.1 = discretize(pexp(x, rate = a), 0, limX, by = 0.1, method = "lower")[2:1001]
# Panjer recursion functions
panjerUpper1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expUpper1,
x.scale = 1,
tol = 0.001,
maxit = 100000000)
panjerUpper0.1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expUpper0.1,
x.scale = 0.1,
tol = 0.001,
maxit = 100000000)
panjerLower1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expLower1,
x.scale = 1,
tol = 0.001,
maxit = 100000000)
panjerLower0.1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expLower0.1,
x.scale = 0.1,
tol = 0.001,
maxit = 100000000)
# Plot
li = seq(0, 60, by = 0.1)
g7panjer = ggplot()
g7panjer = g7panjer +
geom_line(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_line(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
geom_line(aes(x = li, y = panjerLower1(li)), color = "cyan", linetype = "dashed") +
geom_line(aes(x = li, y = panjerLower0.1(li)), color = "red", linetype = "dashed") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
#Combine plots
g7approx = grid.arrange(g7upper, g7lower, ncol = 2)
g7 = grid.arrange(g7approx, g7panjer, heights = c(4, 6))
g7
# Save graph to pdf
ggsave(glue("{FILEPATH}slika7.pdf"),
g7,
device = cairo_pdf,
width = 12,
height = 10)
# Plot
li = seq(0, 60, by = 0.1)
g7panjer = ggplot()
g7panjer = g7panjer +
geom_line(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_line(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
geom_line(aes(x = li, y = panjerLower1(li)), color = "black", linetype = "dashed") +
geom_line(aes(x = li, y = panjerLower0.1(li)), color = "purple", linetype = "dashed") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
expLowe1
expLower1
expLower1 = discretize(pexp(x, rate = a), 0, limX, by = 1, method = "lower")[1:100]
expLower0.1 = discretize(pexp(x, rate = a), 0, limX, by = 0.1, method = "lower")[1:1000]
expLower1
expLower1 = c(0.001, expLower1[2:100])
# Panjer recursion functions
panjerUpper1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expUpper1,
x.scale = 1,
tol = 0.001,
maxit = 100000000)
panjerUpper0.1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expUpper0.1,
x.scale = 0.1,
tol = 0.001,
maxit = 100000000)
panjerLower1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expLower1,
x.scale = 1,
tol = 0.001,
maxit = 100000000)
panjerLower0.1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expLower0.1,
x.scale = 0.1,
tol = 0.001,
maxit = 100000000)
library(latex2exp)
# Plot
li = seq(0, 60, by = 0.1)
g7panjer = ggplot()
g7panjer = g7panjer +
geom_line(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_line(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
geom_line(aes(x = li, y = panjerLower1(li)), color = "black", linetype = "dashed") +
geom_line(aes(x = li, y = panjerLower0.1(li)), color = "purple", linetype = "dashed") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
g7panjer = ggplot()
g7panjer = g7panjer +
geom_line(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_line(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
geom_line(aes(x = li, y = panjerLower1(li)), color = "black") +
geom_line(aes(x = li, y = panjerLower0.1(li)), color = "purple") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
# Discretization of exponantial distribution
expUpper1 = discretize(pexp(x, a), 0, limX, by = 1, method = "upper")
expUpper0.1 = discretize(pexp(x, a), 0, limX, by = 0.1, method = "upper")
expLower1 = discretize(pexp(x, rate = a), 0, limX, by = 1, method = "lower")[1:100]
expLower0.1 = discretize(pexp(x, rate = a), 0, limX, by = 0.1, method = "lower")[1:1000]
# Panjer recursion functions
panjerUpper1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expUpper1,
x.scale = 1,
tol = 0.001,
maxit = 100000000)
panjerUpper0.1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expUpper0.1,
x.scale = 0.1,
tol = 0.001,
maxit = 100000000)
panjerLower1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expLower1,
x.scale = 1,
tol = 0.001,
maxit = 100000000)
panjerLower0.1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expLower0.1,
x.scale = 0.1,
tol = 0.001,
maxit = 100000000)
library(latex2exp)
# Plot
li = seq(0, 60, by = 0.1)
g7panjer = ggplot()
g7panjer = g7panjer +
geom_line(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_line(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
geom_line(aes(x = li, y = panjerLower1(li)), color = "black") +
geom_line(aes(x = li, y = panjerLower0.1(li)), color = "purple") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
g7panjer = ggplot()
g7panjer = g7panjer +
geom_step(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_line(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
geom_line(aes(x = li, y = panjerLower1(li)), color = "black") +
geom_line(aes(x = li, y = panjerLower0.1(li)), color = "purple") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
# Plot
li = seq(0, 60, by = 0.1)
g7panjer = ggplot()
g7panjer = g7panjer +
geom_step(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_step(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
geom_step(aes(x = li, y = panjerLower1(li)), color = "black") +
geom_step(aes(x = li, y = panjerLower0.1(li)), color = "purple") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
# Plot
li = seq(0, 60, by = 0.1)
g7panjer = ggplot()
g7panjer = g7panjer +
geom_step(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_step(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
geom_step(aes(x = li, y = panjerLower1(li)), color = "blueviolet") +
geom_step(aes(x = li, y = panjerLower0.1(li)), color = "pink") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
library(latex2exp)
# Plot
li = seq(0, 60, by = 0.1)
g7panjer = ggplot()
g7panjer = g7panjer +
geom_step(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_step(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
geom_step(aes(x = li, y = panjerLower1(li)), color = "blueviolet") +
geom_step(aes(x = li, y = panjerLower0.1(li)), color = "hotpink") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
g7panjer = ggplot()
g7panjer = g7panjer +
geom_step(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_step(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
geom_step(aes(x = li, y = panjerLower1(li)), color = "blueviolet") +
geom_step(aes(x = li, y = panjerLower0.1(li)), color = "deeppink") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
g7panjer = ggplot()
g7panjer = g7panjer +
geom_step(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_step(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
geom_step(aes(x = li, y = panjerLower1(li)), color = "blueviolet") +
geom_step(aes(x = li, y = panjerLower0.1(li)), color = "deeppink4") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
library(latex2exp)
# Plot
li = seq(0, 60, by = 0.1)
g7panjer = ggplot()
g7panjer = g7panjer +
geom_step(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_step(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
geom_step(aes(x = li, y = panjerLower1(li)), color = "blueviolet") +
geom_step(aes(x = li, y = panjerLower0.1(li)), color = "darkorange") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
#------------------------------------------------------------------------------#
#Slika 7 (Panjer recursion)
library(actuar)
set.seed(42)
# PARAMETERS
lambda = 5 # Intensity of Poisson distribution
a = 1/3.1415 # Shape parameter for exponential distribution
h = c(1, 0.1) # Steps in Panjer recursion
limX = 100
limS = 100
# Create dataframe with exponential cdf
x = seq(0, limX-0.001, by = 0.001)
cdfUpper = data.frame(x, cdf = pexp(x, rate = a))
# Discretize the cdf of the exponential distribution
for (i in 1:length(h)){
cdfUpper[glue("discreteUpper{h[i]}")] = rep(
cumsum(actuar::discretize(pexp(x, rate = a), 0, limX, h[i], method="upper")),
each = 1/(0.001/h[i])
)
}
# Plot
g7upper = ggplot(data=cdfUpper)
g7upper = g7upper + geom_line(aes(x = x, y = cdf), color = "black") +
geom_line(aes(x = x, y = discreteUpper1), color = "cyan") +
geom_line(aes(x = x, y = discreteUpper0.1), color = "red") +
labs(title = expression(Zgornja~aproksimacija~porazdelitve~"X~Exp( 1/"~pi~")"),
x = "x",
y ="F_X(x)"
)
g7upper
cdfLower = data.frame(x, cdf = pexp(x, rate = a))
for (i in 1:length(h)){
cdfLower[glue("discreteLower{h[i]}")] = rep(
cumsum(actuar::discretize(pexp(x, rate = a), 0, limX, h[i], method="lower")),
each = 1/(0.001/h[i])
)[1:10000]
}
# Plot
g7lower = ggplot(data=cdfLower)
g7lower = g7lower + geom_line(aes(x = x, y = cdf), color = "black") +
geom_line(aes(x = x, y = discreteLower1), color = "blueviolet") +
geom_line(aes(x = x, y = discreteLower0.1), color = "darkorange") +
labs(title = expression(Spodnja~aproksimacija~porazdelitve~"X~Exp( 1/"~pi~")"),
x = "x",
y ="F_X(x)"
)
g7lower
# Discretization of exponantial distribution
expUpper1 = discretize(pexp(x, a), 0, limX, by = 1, method = "upper")
expUpper0.1 = discretize(pexp(x, a), 0, limX, by = 0.1, method = "upper")
expLower1 = discretize(pexp(x, rate = a), 0, limX, by = 1, method = "lower")[1:100]
expLower0.1 = discretize(pexp(x, rate = a), 0, limX, by = 0.1, method = "lower")[1:1000]
# Panjer recursion functions
panjerUpper1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expUpper1,
x.scale = 1,
tol = 0.001,
maxit = 100000000)
panjerUpper0.1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expUpper0.1,
x.scale = 0.1,
tol = 0.001,
maxit = 100000000)
panjerLower1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expLower1,
x.scale = 1,
tol = 0.001,
maxit = 100000000)
panjerLower0.1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expLower0.1,
x.scale = 0.1,
tol = 0.001,
maxit = 100000000)
library(latex2exp)
# Plot
li = seq(0, 60, by = 0.1)
g7panjer = ggplot()
g7panjer = g7panjer +
geom_step(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_step(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
geom_step(aes(x = li, y = panjerLower1(li)), color = "blueviolet") +
geom_step(aes(x = li, y = panjerLower0.1(li)), color = "darkorange") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
#Combine plots
g7approx = grid.arrange(g7upper, g7lower, ncol = 2)
g7 = grid.arrange(g7approx, g7panjer, heights = c(4, 6))
g7
# Save graph to pdf
ggsave(glue("{FILEPATH}slika7.pdf"),
g7,
device = cairo_pdf,
width = 12,
height = 10)
#------------------------------------------------------------------------------#
#Slika 7 (Panjer recursion)
library(actuar)
set.seed(42)
# PARAMETERS
lambda = 5 # Intensity of Poisson distribution
a = 1/3.1415 # Shape parameter for exponential distribution
h = c(1, 0.1) # Steps in Panjer recursion
limX = 10
limS = 100
# Create dataframe with exponential cdf
x = seq(0, limX-0.001, by = 0.001)
cdfUpper = data.frame(x, cdf = pexp(x, rate = a))
# Discretize the cdf of the exponential distribution
for (i in 1:length(h)){
cdfUpper[glue("discreteUpper{h[i]}")] = rep(
cumsum(actuar::discretize(pexp(x, rate = a), 0, limX, h[i], method="upper")),
each = 1/(0.001/h[i])
)
}
# Plot
g7upper = ggplot(data=cdfUpper)
g7upper = g7upper + geom_line(aes(x = x, y = cdf), color = "black") +
geom_line(aes(x = x, y = discreteUpper1), color = "cyan") +
geom_line(aes(x = x, y = discreteUpper0.1), color = "red") +
labs(title = expression(Zgornja~aproksimacija~porazdelitve~"X~Exp( 1/"~pi~")"),
x = "x",
y ="F_X(x)"
)
g7upper
cdfLower = data.frame(x, cdf = pexp(x, rate = a))
for (i in 1:length(h)){
cdfLower[glue("discreteLower{h[i]}")] = rep(
cumsum(actuar::discretize(pexp(x, rate = a), 0, limX, h[i], method="lower")),
each = 1/(0.001/h[i])
)[1:10000]
}
# Plot
g7lower = ggplot(data=cdfLower)
g7lower = g7lower + geom_line(aes(x = x, y = cdf), color = "black") +
geom_line(aes(x = x, y = discreteLower1), color = "blueviolet") +
geom_line(aes(x = x, y = discreteLower0.1), color = "darkorange") +
labs(title = expression(Spodnja~aproksimacija~porazdelitve~"X~Exp( 1/"~pi~")"),
x = "x",
y ="F_X(x)"
)
g7lower
# Discretization of exponantial distribution
expUpper1 = discretize(pexp(x, a), 0, limS, by = 1, method = "upper")
expUpper0.1 = discretize(pexp(x, a), 0, limS, by = 0.1, method = "upper")
expLower1 = discretize(pexp(x, rate = a), 0, limS, by = 1, method = "lower")[1:100]
expLower0.1 = discretize(pexp(x, rate = a), 0, limS, by = 0.1, method = "lower")[1:1000]
# Panjer recursion functions
panjerUpper1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expUpper1,
x.scale = 1,
tol = 0.001,
maxit = 100000000)
panjerUpper0.1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expUpper0.1,
x.scale = 0.1,
tol = 0.001,
maxit = 100000000)
panjerLower1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expLower1,
x.scale = 1,
tol = 0.001,
maxit = 100000000)
panjerLower0.1 = aggregateDist(method = 'recursive',
model.freq = 'poisson',
lambda = lambda,
model.sev = expLower0.1,
x.scale = 0.1,
tol = 0.001,
maxit = 100000000)
library(latex2exp)
# Plot
li = seq(0, 60, by = 0.1)
g7panjer = ggplot()
g7panjer = g7panjer +
geom_step(aes(x = li, y = panjerUpper1(li)), color = "cyan") +
geom_step(aes(x = li, y = panjerUpper0.1(li)), color = "red") +
geom_step(aes(x = li, y = panjerLower1(li)), color = "blueviolet") +
geom_step(aes(x = li, y = panjerLower0.1(li)), color = "darkorange") +
labs(title =  TeX(r'( Aproksimacija porazdelitve $S = \sum_{i=1}^NX_i$ s Panjerjevo rekurzivno shemo)'),
x = "x",
y ="F_S(x)"
)
g7panjer
#Combine plots
g7approx = grid.arrange(g7upper, g7lower, ncol = 2)
g7 = grid.arrange(g7approx, g7panjer, heights = c(4, 6))
g7
# Save graph to pdf
ggsave(glue("{FILEPATH}slika7.pdf"),
g7,
device = cairo_pdf,
width = 12,
height = 10)
